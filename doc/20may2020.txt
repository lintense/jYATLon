TODO

Add logging
- Add debug info in complex process handling to help out users

Add error position in errors

Struct states should be ordered, not because it is necessary but to ease comparison between versions.

Implement {before ALIAS}, {between ALIAS}, {after ALIAS}, {empty ALIAS}

Implement {begin ALIAS |"|",|");}


INTERRESTINGLY
- Some use case of using jYATLon inside itself:
	- To extract and dump the Struct during testing
	- To generate the Struct class
	- To generate the Root interface...



=== String ===
	$ is a String (hence we have {call String $})
	call String is used unambiguously
=== String/String ===
	call String/String is used unambiguously

How to validate the destinations?

{begin X}{{$:X}}{{call .../String $.toString}}{end X}\n=== String ===\n1{{call .../String $}}\n=== String/String ===\n2\n=== .../String ===\n3"

{{$}}\n=== .../String ===\n=== .../String ===

    	String templateContent = "{begin X}{{$:X}}{{call .../String $.toString}}{end X}\n=== String ===\n1{{call .../String $}}\n=== String/String ===\n2\n=== .../String ===\n3";

ADD TO TESTS:
		
"{{$}}\n=== .../String ===\n=== .../String ===";
Duplicated path name: === String ===

"{{call String:Y $}}\n=== String:X ===\n=== String:Y ===\n1"
1

"{{call String $}}\n=== String:X ===\n=== String:Y ===\n1"
java.lang.IllegalStateException: Many destination found for call String

"{{call .../String/String:Y $}}\n=== .../String/String:X ===\n=== .../String:Y ===\n1"
1

