<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>jyatlon</groupId>
   <packaging>jar</packaging>
   <version>0.0.1-SNAPSHOT</version>
   <name>jyatlon</name>
   <description>A declarative templating language</description>
   <properties>
      <generate.sources>generate-sources</generate.sources>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <junit.jupiter.version>5.5.2</junit.jupiter.version>
      <junit.platform.version>1.5.2</junit.platform.version>
   </properties>
   <dependencies>
      <dependency>
         <groupId>org.antlr</groupId>
         <artifactId>antlr4-runtime</artifactId>
         <version>4.9</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>3.9</version>
         <scope>test</scope>
      </dependency>
      <!-- http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.8.6/jackson-core-2.8.6.jar -->
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-core</artifactId>
         <version>2.11.2</version>
         <scope>test</scope>
      </dependency>
      <!-- http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.8.6/jackson-annotations-2.8.6.jar -->
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-annotations</artifactId>
         <version>2.11.2</version>
         <scope>test</scope>
      </dependency>
      <!-- http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.8.6/jackson-databind-2.8.6.jar -->
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <version>2.13.4.1</version>
         <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.mockito/mockito-all -->
      <!-- >dependency>
	    <groupId>org.mockito</groupId>
	    <artifactId>mockito-all</artifactId>
	    <version>1.10.19</version>
	    <scope>test</scope>
	</dependency-->
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-api</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <version>${junit.jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner -->
      <dependency>
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-runner</artifactId>
         <version>${junit.platform.version}</version>
         <scope>test</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher -->
      <dependency>
         <groupId>org.junit.platform</groupId>
         <artifactId>junit-platform-launcher</artifactId>
         <version>${junit.platform.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-antrun-plugin</artifactId>
         <version>3.0.0</version>
         <type>maven-plugin</type>
      </dependency>
   </dependencies>
   <build>
      <pluginManagement>
         <plugins>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
               <groupId>org.eclipse.m2e</groupId>
               <artifactId>lifecycle-mapping</artifactId>
               <version>1.0.0</version>
               <configuration>
                  <lifecycleMappingMetadata>
                     <pluginExecutions>
                        <pluginExecution>
                           <pluginExecutionFilter>
                              <groupId>org.apache.maven.plugins</groupId>
                              <artifactId>maven-antrun-plugin</artifactId>
                              <versionRange>[3.0.0,)</versionRange>
                              <goals>
                                 <goal>run</goal>
                              </goals>
                           </pluginExecutionFilter>
                           <action>
                              <ignore />
                           </action>
                        </pluginExecution>
                     </pluginExecutions>
                  </lifecycleMappingMetadata>
               </configuration>
            </plugin>
         </plugins>
      </pluginManagement>
      <plugins>
         <plugin>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-maven-plugin</artifactId>
            <version>4.9</version>
            <configuration>
               <listener>true</listener>
               <visitor>true</visitor>
               <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>
            </configuration>
            <executions>
               <execution>
                  <id>antlr</id>
                  <goals>
                     <goal>antlr4</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <!-- latest version (2.20.1) does not work well with JUnit5 -->
            <version>3.0.0-M4</version>
            <configuration>
               <useSystemClassLoader>false</useSystemClassLoader>
            </configuration>
            <dependencies>
               <dependency>
                  <groupId>org.junit.platform</groupId>
                  <artifactId>junit-platform-surefire-provider</artifactId>
                  <version>1.0.3</version>
               </dependency>
               <dependency>
                  <groupId>org.junit.jupiter</groupId>
                  <artifactId>junit-jupiter-engine</artifactId>
                  <version>5.0.3</version>
               </dependency>
               <dependency>
                  <groupId>org.apache.maven.surefire</groupId>
                  <artifactId>surefire-logger-api</artifactId>
                  <version>2.21.0</version>
                  <!-- to get around bug https://github.com/junit-team/junit5/issues/1367 -->
                  <optional>true</optional>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.5.1</version>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>copy-dependencies</id>
                  <phase>prepare-package</phase>
                  <goals>
                     <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                     <outputDirectory>${project.build.directory}/classes/lib</outputDirectory>
                     <includeScope>compile</includeScope>
                     <overWriteReleases>false</overWriteReleases>
                     <overWriteSnapshots>false</overWriteSnapshots>
                     <overWriteIfNewer>true</overWriteIfNewer>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <!-- Make this jar executable -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.2.0</version>
            <configuration>
               <archive>
                  <addMavenDescriptor>false</addMavenDescriptor>
                  <manifest>
                     <addClasspath>true</addClasspath>
                     <classpathPrefix>lib/</classpathPrefix>
                     <!-- Jar file entry point -->
                     <mainClass>jyatlon.core.App</mainClass>
                     <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  </manifest>
               </archive>
               <excludes>
                  <exclude>**/dev/**</exclude>
                  <exclude>**/maven/**</exclude>
               </excludes>
               <finalName>jYATLon-${project.version}</finalName>
            </configuration>
         </plugin>
         <!-- Coverage report -->
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.4</version>
            <executions>
               <!--
               Prepares the property pointing to the JaCoCo runtime agent which
               is passed as VM argument when Maven the Surefire plugin is executed.
               -->
               <execution>
                  <id>pre-unit-test</id>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                     <!--
                    Sets the name of the property containing the settings
                    for JaCoCo runtime agent.
                    -->
                     <propertyName>surefire.argLine</propertyName>
                  </configuration>
               </execution>
               <!--
               Ensures that the code coverage report for unit tests is created after
               unit tests have been run.
               -->
               <execution>
                  <id>post-unit-test</id>
                  <phase>test</phase>
                  <goals>
                     <goal>report</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                     <!-- Sets the output directory for the code coverage report. -->
                     <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
               <execution>
                  <phase>${generate.sources}</phase>
                  <configuration>
                     <target>
                        <property name="compile_classpath" refid="maven.compile.classpath" />
                        <property name="project_src" value="${project.basedir}\src\main\java" />
                        <property name="project_bin" value="${project.build.directory}\classes" />
                        <echo level="info" message="Calling: maven_gen_struct" />
                        <ant antfile="${basedir}\build.xml">
                           <target name="maven_gen_struct" />
                           <reference torefid="maven.compile.classpath" refid="maven.compile.classpath" />
                        </ant>
                     </target>
                  </configuration>
                  <goals>
                     <goal>run</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>
   <profiles>
      <!--  JVM configuration for running the tests JDK8 required! -->
      <profile>
         <id>surefire-java8</id>
         <activation>
            <jdk>[1.8</jdk>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.19.1</version>
                  <configuration>
                     <forkCount>1</forkCount>
                     <reuseForks>true</reuseForks>
                     <argLine>-ea -Xmx2048m ${surefire.argLine}</argLine>
                     <!-- illegal-access=deny removed for JDK8 -->
                  </configuration>
                  <executions>
                     <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
   <artifactId>Jyatlon</artifactId>
</project>